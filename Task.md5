Домашнее задание №5 (Модульное тестирование)
Before
Создать новый проект, либо отдельную ветку без истории коммитов в текущем проекте с домашними работами.

Задание
Создать в проекте следующую структуру папок и файлов, типичную для maven-проектов:

src
    main
        java
            model
                Calculator.java
                CalculatorException.java
            Main.java
    test
        java
            NegativeCalculatorTest.java
            PositiveCalculatorTest.java
Чтобы протестировать различные тестовые данные и не дублировать код, следует использовать @DataProvider'ы
с названиями методов positiveData и negativeData для классов PositiveCalculatorTest и NegativeCalculatorTest соответственно.

Каждый набор тестовых данных датапровайдера должен содержать:

оператор "+", "-", "*" или "/" (String);
первое число (String);
второе число (String);
результат (только для позитивных проверок.)
Тестовые данные должны обеспечивать минимально-необходимый набор юнит-тестов и выполнять проверки:

позитивные
негативные
граничные значения
В классах PositiveCalculatorTest и NegativeCalculatorTest создать по одному тестовому методу
(методу с аннотацией @Test) positiveTest и negativeTest соотвественно.Указать в тестах датапровайдеры.

Тестовые методы должны вызывать метод public static String execute(String[] params) класса Calculator
и сравнивать результат с ожидаемым значением (ожидаемое значение и params берутся из датапровайдера).

В негативных проверках следует ожидать, что выбрасывается CalculatorException (unchecked exception).

Создать пустой метод execute в классе Calculator, чтобы программа компилировалась. Затем запустить тесты. Ожидаемо, но все тесты должны быть failed.

Теперь нужно написать логику Calculator так, чтобы все тесты стали passed.

Также у калькулятора должна быть точка входа в программу - метод public static void main(String[] args) в классе Main.

В методе main требуется считать из консоли три строки (оператор и два числа),
затем вызвать на этих данных метод execute класса Calculator и вывести результат обратно в консоль.

Для считывания с консоли можно использовать класс Scanner

Scanner in = new Scanner(System.in);
String line = in.nextLine();
Требования
Использовать версию Java - 8, если преподаватель не указал иное.

Не использовать сторонние библиотеки, кроме TestNG и Apache Log4j.

Модульные тесты калькулятора должны проходить без ошибок.

В сигнатуре метода execute класса Calculator не должно быть оператора throws.
Формат проверок
1.Выполнить работу в проекте с домашним заданием на gitlab.com (разрешается и github.com).

2.Каждое домашнее задание должно быть выполнено в соответствующей отдельной ветке, например для текущей задачи homework5.
Рекомендуется создать ветку с пустой историей коммитов. Это можно сделать с помощью команды:

git checkout --orphan homework5
3.Готовую работу требуется отправить в систему автопроверки ДЗ: https://autoschool.rnd.lanit.ru/